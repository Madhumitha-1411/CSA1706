def map_coloring(graph, colors):
    result = {}
    def is_valid(node, color):
        for neighbor in graph[node]:
            if neighbor in result and result[neighbor] == color:
                return False
        return True
    def solve(node_index):
        if node_index == len(graph):
            return True
        node = list(graph.keys())[node_index]
        for color in colors:
            if is_valid(node, color):
                result[node] = color
                if solve(node_index + 1):
                    return True
                result.pop(node)
        return False
    if solve(0):
        print(result)
    else:
        print("No solution")
        
graph = {
    'A': ['B', 'C'],
    'B': ['A', 'C', 'D'],
    'C': ['A', 'B', 'D'],
    'D': ['B', 'C']
}
colors = ['Red', 'Green', 'Blue']
map_coloring(graph, colors)
